{"version":3,"sources":["./src/app/shared/calculator/calculator.component.ts","./src/app/shared/calculator/calculator.component.html","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/shared/header/header.component.ts","./src/app/shared/header/header.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;;;;;;ICqBxD,2EAGC;IACC,sFACF;IAAA,4DAAO;;;IAoBP,2EAGC;IACC,sFACF;IAAA,4DAAO;;;IACP,2EAAiD;IAC/C,uDACF;;IAAA,4DAAO;;;IADL,0DACF;IADE,yMACF;;;IACA,2EAAiD;IAC/C,uDACF;;IAAA,4DAAO;;;IADL,0DACF;IADE,yMACF;;;IAgBA,2EAGC;IACC,uDACF;IAAA,4DAAO;;;;IADL,0DACF;IADE,2XACF;;;IAaA,2EAGC;IACC,uDACF;IAAA,4DAAO;;;;IADL,0DACF;IADE,0WACF;;;IASR,0EAAmC;IACjC,yEAAuB;IACrB,yEAAiB;IACf,0EAAgC;IAC9B,2EAA0B;IAAA,wEAAa;IAAA,4DAAO;IAAA,gEAAI;IACpD,4DAAM;IACN,0EAAgC;IAC9B,2EAA0B;IAAA,uDAAuB;IAAA,4DAAO;IAC1D,4DAAM;IACR,4DAAM;IACR,4DAAM;IACN,0EAAuB;IACrB,0EAAiB;IACf,2EAAgC;IAC9B,4EAA0B;IAAA,4EAAgB;IAAA,4DAAO;IAAA,iEAAI;IACvD,4DAAM;IACN,2EAAgC;IAC9B,4EAA0B;IAAA,wDAAwC;;IAAA,4DAAO;IAC3E,4DAAM;IACR,4DAAM;IACR,4DAAM;IACN,0EAAuB;IACrB,0EAAiB;IACf,2EAAgC;IAC9B,4EAA0B;IAAA,+EAAc;IAAA,4DAAO;IAAA,iEAAI;IACrD,4DAAM;IACN,2EAAgC;IAC9B,4EAA0B;IAAA,wDAAwC;;IAAA,4DAAO;IAC3E,4DAAM;IACR,4DAAM;IACR,4DAAM;IACN,0EAAuB;IACrB,0EAAiB;IACf,2EAAgC;IAC9B,4EAA0B;IAAA,uFAA2B;IAAA,4DAAO;IAAA,iEAAI;IAClE,4DAAM;IACN,2EAAgC;IAC9B,4EAA0B;IAAA,wDAAoC;;IAAA,4DAAO;IACvE,4DAAM;IACR,4DAAM;IACR,4DAAM;IACN,0EAAuB;IACrB,0EAAiB;IACf,2EAAgC;IAC9B,4EAA6B;IAAA,kFAAsB;IAAA,4DAAO;IAAA,iEAAI;IAChE,4DAAM;IACN,2EAAgC;IAC9B,4EAA6B;IAAA,wDAAsC;;IAAA,4DAAO;IAC5E,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IA5C4B,0DAAuB;IAAvB,kGAAuB;IAUvB,0DAAwC;IAAxC,gKAAwC;IAUxC,2DAAwC;IAAxC,yKAAwC;IAUxC,2DAAoC;IAApC,8JAAoC;IAUjC,2DAAsC;IAAtC,gKAAsC;;;ADjJxE,MAAM,mBAAmB;IAsC9B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QApC5C,aAAa;QACN,eAAU,GAAc,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACpD,aAAa,EAAE,CAAE,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAE;YAC5C,WAAW,EAAE,CAAE,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAE;YAC1C,QAAQ,EAAE,CAAE,IAAI,EAAE,CAAE,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,EAAE,CAAC,CAAE,CAAE;YAC/D,IAAI,EAAE,CAAE,IAAI,EAAE,CAAE,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,EAAE,CAAC,CAAE,CAAE;SAC5D,CAAC;QAEF,YAAY;QACL,WAAM,GAAY,KAAK,CAAC;QACxB,eAAU,GAAW,IAAI,CAAC;QAEjC,eAAe;QACR,kBAAa,GAAW,IAAI,CAAC;QAC7B,gBAAW,GAAW,IAAI,CAAC;QAC3B,SAAI,GAAW,IAAI,CAAC;QACpB,aAAQ,GAAW,IAAI,CAAC;QAE/B,oCAAoC;QAC7B,aAAQ,GAAW,IAAI,CAAC;QACxB,aAAQ,GAAW,IAAI,CAAC;QACxB,kBAAa,GAAY,IAAI,CAAC;QAC9B,kBAAa,GAAY,IAAI,CAAC;QAErC,mBAAmB;QACZ,aAAQ,GAAW,IAAI,CAAC;QACxB,iBAAY,GAAW,IAAI,CAAC;QAC5B,mBAAc,GAAW,IAAI,CAAC;QAErC,kBAAkB;QACX,cAAS,GAAW,IAAI,CAAC;QACzB,oBAAe,GAAY,IAAI,CAAC;QAChC,mBAAc,GAAY,IAAI,CAAC;QAC/B,iBAAY,GAAW,IAAI,CAAC;QAC5B,mBAAc,GAAW,IAAI,CAAC;IAEW,CAAC;IAEjD,QAAQ;QACN,4DAA4D;QAC5D,IAAG,MAAM,CAAC,UAAU,GAAG,IAAI,EAAC;YAC1B,IAAI,CAAC,UAAU,GAAG,4BAA4B,CAAC;SAEhD;QAAA,IAAG,CAAC,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC,EAAC;YAC7D,IAAI,CAAC,UAAU,GAAG,4BAA4B,CAAC;SAEhD;QAAA,IAAG,MAAM,CAAC,UAAU,IAAI,IAAI,EAAC;YAC5B,IAAI,CAAC,UAAU,GAAG,2BAA2B,CAAC;SAC/C;IACH,CAAC;IAEM,qBAAqB;QAC1B,sEAAsE;QACtE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;QACzC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;QAEzC,IAAG,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,CAAC,EAAC;YAC9F,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAE1B,IAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,QAAQ,EAAC;gBACnC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;aAE3B;iBAAI;gBACH,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;aAE5B;SACF;aAAI;YACH,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAE5B;IACH,CAAC;IAEM,IAAI;QACT,YAAY;QACZ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEnB,gBAAgB;QAChB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;QAE3B,wBAAwB;QACxB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC;QAE5D,oBAAoB;QACpB,IAAI,CAAC,QAAQ,GAAG,CAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC;QACxC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACvC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY;QAC7D,IAAI,CAAC,eAAe,GAAG,CAAE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAE,GAAG,IAAI,CAAC,cAAc,CAAC;QAErF,mBAAmB;QACnB,IAAI,CAAC,cAAc,GAAI,CAAE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAE,GAAG,IAAI,CAAC,cAAc,CAAC;QAErF,iCAAiC;QACjC,IAAI,CAAC,YAAY,GAAG,CAAE,IAAI,CAAC,eAAe,GAAG,GAAG,CAAE,GAAG,EAAE,CAAC;IAC1D,CAAC;;sFA/FU,mBAAmB;mGAAnB,mBAAmB;QCRhC,yEAAqB;QACnB,oEAA+C;QAC/C,yEAAqB;QAEnB,0EAA+B;QAC7B,wEAAuB;QAAA,oGAAoC;QAAA,4DAAK;QAChE,yEAAuB;QACrB,yEAAiB;QACf,yEAA+B;QAC7B,2EAA6C;QAAA,gFAAe;QAAA,iEAAI;QAAA,4DAAQ;QACxE,4EAWS;QAJP,+LAA2B,mFAClB,2BAAuB,IADL;QAP7B,4DAWS;QACT,oHAKO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,0EAAuB;QACrB,0EAAiB;QACf,0EAA+B;QAC7B,6EAA2C;QAAA,mEAAO;QAAA,iEAAI;QAAA,4DAAQ;QAC9D,6EAWS;QAJP,6LAAyB,mFAChB,2BAAuB,IADP;QAP3B,4DAWS;QACT,oHAKO;QACP,oHAEO;QACP,oHAEO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,0EAAuB;QACrB,0EAAiB;QACf,2EAA8B;QAC5B,6EAAwC;QAAA,wEAAY;QAAA,iEAAI;QAAA,4DAAQ;QAChE,6EAOS;QAJP,0LAAsB;QAHxB,4DAOS;QACT,oHAKO;QACT,4DAAM;QACN,2EAA8B;QAC5B,6EAAqC;QAAA,yEAAa;QAAA,iEAAI;QAAA,4DAAQ;QAC9D,6EAQS;QAHP,sLAAkB;QALpB,4DAQS;QACT,oHAKO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,2EAAyB;QACvB,8EAAkH;QAA1F,4IAAS,UAAM,IAAC;QAA0E,oEAAQ;QAAA,4DAAS;QACrI,4DAAM;QACR,4DAAO;QAEP,oHAmDM;QACR,4DAAM;QACR,4DAAM;;;;;;;;;;QA9JwB,0DAAkB;QAAlB,4IAAkB;QAGtC,0DAAwB;QAAxB,qFAAwB;QAapB,0DAA2B;QAA3B,sFAA2B;QAO1B,0DAAqI;QAArI,+TAAqI;QAkBtI,0DAAyB;QAAzB,oFAAyB;QAOxB,0DAA+H;QAA/H,yTAA+H;QAIvG,0DAAoB;QAApB,oFAAoB;QAGpB,0DAAoB;QAApB,oFAAoB;QAa7C,0DAAsB;QAAtB,iFAAsB;QAOrB,0DAAsH;QAAtH,sTAAsH;QAYvH,0DAAkB;QAAlB,6EAAkB;QAMjB,0DAA0G;QAA1G,0SAA0G;QAQxE,0DAAwE;QAAxE,wIAAwE;QAIhG,0DAAY;QAAZ,4EAAY;;;;;;;;;;;;;;;;;;;;;;ACnG9B,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCP1B,wEAAyB;QACzB,4EAAiC;;;;;;;;;;;;;;;;;;ACM1B,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCP5B,yEAAiB;QACb,oEAAgD;QACpD,4DAAM;;;;;;;;;;;;;;ACFN;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;ACT5D,MAAM,YAAY;IAJzB;QAKE,UAAK,GAAG,oBAAoB,CAAC;KAC9B;;wEAFY,YAAY;4FAAZ,YAAY;QAFZ,2EAA+B;;;;;;;;;;;;;;ACJ5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoD;AACc;AACR;AAEF;AACT;AAE/C,QAAQ;AACoD;AAE5D,aAAa;AACsD;AACY;AAE/E,gBAAgB;AACwB;AACU;AACI;;;AAEtD,2EAAkB,CAAC,iEAAQ,CAAC,CAAC;AAsBtB,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FAJb,CAAC;YACV,OAAO,EAAE,uDAAS;YAClB,QAAQ,EAAE,OAAO;SAClB,CAAC,YAVO;YACP,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACX,kEAAmB;YACnB,sDAAa,CAAC,OAAO,EAAE;SACxB;mIAOU,SAAS,mBAlBlB,2DAAY;QACZ,wEAAa;QACb,+EAAe;QACf,2FAAmB,aAGnB,uEAAa;QACb,oEAAgB;QAChB,0DAAW;QACX,kEAAmB;;;;;;;;;;;;;AC/BvB;AAAA;AAAA;AAAA;AAAA;AAAuD;AACK;;;AAE5D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wEAAa;KACzB;CACF,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;ACbuB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-calculator',\r\n  templateUrl: './calculator.component.html',\r\n  styleUrls: ['./calculator.component.scss']\r\n})\r\nexport class CalculatorComponent implements OnInit {\r\n\r\n  // Validation\r\n  public formValues: FormGroup = this.formBuilder.group({\r\n    propertyValue: [ null, Validators.required ],\r\n    downPayment: [ null, Validators.required ],\r\n    deadline: [ null, [ Validators.required, Validators.max(35) ] ],\r\n    rate: [ null, [ Validators.required, Validators.max(20) ] ]\r\n  })\r\n\r\n  // Interface\r\n  public result: boolean = false;\r\n  public background: string = null;\r\n\r\n  // Input Fields\r\n  public propertyValue: number = null;\r\n  public downPayment: number = null;\r\n  public rate: number = null;\r\n  public deadline: number = null;\r\n\r\n  // Variables ValidationDownPayment()\r\n  public valueMin: number = null;\r\n  public valueMax: number = null;\r\n  public validationMin: boolean = true;\r\n  public validationMax: boolean = true;\r\n\r\n  // Variables calc()\r\n  public rateCalc: number = null;\r\n  public deadlineCalc: number = null;\r\n  public instalmentCalc: number = null;\r\n\r\n  // Returned Values\r\n  public rateJuros: number = null;\r\n  public firstInstalment : number = null;\r\n  public lastInstalment : number = null;\r\n  public familyIncome: number = null;\r\n  public amountFinanced: number = null;\r\n\r\n  constructor(private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    // Insert the best image according to screen resolution size\r\n    if(window.innerWidth > 1900){\r\n      this.background = 'assets/img/home-largue.jpg';\r\n\r\n    }if((window.innerWidth <= 1900) && (window.innerWidth >= 1025)){\r\n      this.background = 'assets/img/home-medium.jpg';\r\n\r\n    }if(window.innerWidth <= 1024){\r\n      this.background = 'assets/img/home-small.jpg';\r\n    }\r\n  }\r\n\r\n  public validationDownPayment(){\r\n    // Down Payment: 20% is the minimum value and 80% is the maximum value\r\n    this.valueMin = this.propertyValue * 0.2;\r\n    this.valueMax = this.propertyValue * 0.8;\r\n\r\n    if((this.downPayment >= this.valueMin) || (this.downPayment == null) || (this.downPayment == 0)){\r\n      this.validationMin = true;\r\n\r\n      if(this.downPayment <= this.valueMax){\r\n        this.validationMax = true;\r\n\r\n      }else{\r\n        this.validationMax = false;\r\n\r\n      }\r\n    }else{\r\n      this.validationMin = false;\r\n      \r\n    }\r\n  }\r\n\r\n  public calc(){\r\n    // Interface\r\n    this.result = true;\r\n\r\n    // Interest Rate\r\n    this.rateJuros = this.rate;\r\n\r\n    // Amount to be financed\r\n    this.amountFinanced = this.propertyValue - this.downPayment;\r\n\r\n    // First Installment\r\n    this.rateCalc = ( this.rate / 12) / 100;\r\n    this.deadlineCalc = this.deadline * 12;\r\n    this.instalmentCalc = this.amountFinanced / this.deadlineCalc\r\n    this.firstInstalment = ( this.amountFinanced * this.rateCalc ) + this.instalmentCalc;\r\n\r\n    // Last Installment\r\n    this.lastInstalment =  ( this.instalmentCalc * this.rateCalc ) + this.instalmentCalc;\r\n\r\n    // Gross Monthly Household Income\r\n    this.familyIncome = ( this.firstInstalment * 100 ) / 30;\r\n  }\r\n\r\n}\r\n","<div class=\"content\">\n  <img class=\"background-img\" [src]=\"background\">\n  <div class=\"finance\">\n\n    <form [formGroup]=\"formValues\">\n      <h1 class=\"form-title\">Simulador de Financiamento de Imóvel</h1>\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-12 form-group\">\n            <label for=\"propertyValue\" class=\"form-text\">VALOR DO IMÓVEL<br></label>\n            <input \n              type=\"text\" \n              class=\"form-control input-size\" \n              id=\"propertyValue\" \n              prefix=\"R$ \" \n              mask=\"separator.2\" \n              thousandSeparator=\".\" \n              [(ngModel)]=\"propertyValue\" \n              (keyup)=\"validationDownPayment()\" \n              formControlName=\"propertyValue\" \n              [ngClass]=\"{'error': formValues.get('propertyValue')?.errors && (formValues.get('propertyValue')?.touched && formValues.get('propertyValue')?.dirty)}\" \n            required>\n            <span \n              class=\"field-error\" \n              *ngIf=\"formValues.get('propertyValue')?.errors && (formValues.get('propertyValue')?.touched && formValues.get('propertyValue')?.dirty)\"\n            >\n              Favor digitar algum valor\n            </span>\n          </div>\n        </div>\n      </div>\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-12 form-group\">\n            <label for=\"downPayment\" class=\"form-text\">ENTRADA<br></label>\n            <input \n              type=\"text\" \n              class=\"form-control input-size\" \n              id=\"downPayment\" \n              prefix=\"R$ \" \n              mask=\"separator.2\" \n              thousandSeparator=\".\" \n              [(ngModel)]=\"downPayment\" \n              (keyup)=\"validationDownPayment()\" \n              formControlName=\"downPayment\" \n              [ngClass]=\"{'error': (formValues.get('downPayment')?.errors && (formValues.get('downPayment')?.touched && formValues.get('downPayment')?.dirty)) || !validationMin || !validationMax}\" \n            required>\n            <span \n              class=\"field-error\" \n              *ngIf=\"formValues.get('downPayment')?.errors && (formValues.get('downPayment')?.touched && formValues.get('downPayment')?.dirty)\"\n            >\n              Favor digitar algum valor\n            </span>\n            <span class=\"field-error\" *ngIf=\"!validationMin\">\n              O valor mínimo de entrada é {{ valueMin | currency: 'BRL' }}\n            </span>\n            <span class=\"field-error\" *ngIf=\"!validationMax\">\n              O valor máximo de entrada é {{ valueMax | currency: 'BRL' }}\n            </span>\n          </div>\n        </div>\n      </div>\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"deadline\" class=\"form-text\">PRAZO (ANOS)<br></label>\n            <input \n              type=\"number\" \n              class=\"form-control input-size-02\" \n              [(ngModel)]=\"deadline\" \n              formControlName=\"deadline\" \n              [ngClass]=\"{'error': formValues.get('deadline')?.errors && (formValues.get('deadline')?.touched && formValues.get('deadline')?.dirty)}\" \n              max=\"35\" \n            required>\n            <span \n              class=\"field-error\" \n              *ngIf=\"formValues.get('deadline')?.errors && (formValues.get('deadline')?.touched && formValues.get('deadline')?.dirty)\"\n            >\n              O prazo máximo deve ter {{ formValues.get('deadline')?.errors?.max.max }} anos e você digitou {{ formValues.get('deadline')?.errors?.max.actual }} anos\n            </span>\n          </div>\n          <div class=\"col-6 form-group\">\n            <label for=\"banco\" class=\"form-text\">TAXA DE JUROS<br></label>\n            <input \n              type=\"text\" \n              class=\"form-control input-size-02\" \n              mask=\"percent\" \n              suffix=\"%\" \n              [(ngModel)]=\"rate\" \n              formControlName=\"rate\" \n              [ngClass]=\"{'error': formValues.get('rate')?.errors && (formValues.get('rate')?.touched && formValues.get('rate')?.dirty)}\" \n            required>\n            <span \n              class=\"field-error\" \n              *ngIf=\"formValues.get('rate')?.errors && (formValues.get('rate')?.touched && formValues.get('rate')?.dirty)\"\n            >\n              A taxa máxima deve ter {{ formValues.get('rate')?.errors?.max.max }}% e você digitou {{ formValues.get('rate')?.errors?.max.actual }}%\n            </span>\n          </div>\n        </div>\n      </div>\n      <div class=\"form-button\">\n        <button class=\"bt-calc\" (click)=\"calc()\" [disabled]=\"(formValues.invalid) || (!validationMin) ||(!validationMax)\">CALCULAR</button>\n      </div>\n    </form>\n\n    <div class=\"result\" *ngIf=\"result\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-8 result-group\">\n            <span class=\"result-text\">Taxa de Juros</span><br>\n          </div>\n          <div class=\"col-4 result-group\">\n            <span class=\"result-text\">{{ rateJuros }}% ao ano</span>\n          </div>\n        </div>\n      </div>\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-8 result-group\">\n            <span class=\"result-text\">Primeira Parcela</span><br>\n          </div>\n          <div class=\"col-4 result-group\">\n            <span class=\"result-text\">{{ firstInstalment  | currency: 'BRL' }}</span>\n          </div>\n        </div>\n      </div>\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-8 result-group\">\n            <span class=\"result-text\">Última Parcela</span><br>\n          </div>\n          <div class=\"col-4 result-group\">\n            <span class=\"result-text\">{{ lastInstalment  | currency: 'BRL' }} </span>\n          </div>\n        </div>\n      </div>\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-8 result-group\">\n            <span class=\"result-text\">Renda mensal familiar bruta</span><br>\n          </div>\n          <div class=\"col-4 result-group\">\n            <span class=\"result-text\">{{ familyIncome | currency: 'BRL' }}</span>\n          </div>\n        </div>\n      </div>\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-8 result-group\">\n            <span class=\"result-text-02\">Valor a ser Financiado</span><br>\n          </div>\n          <div class=\"col-4 result-group\">\n            <span class=\"result-text-02\">{{ amountFinanced | currency: 'BRL' }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n<app-calculator></app-calculator>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"nav\">\r\n    <img class=\"logo-img\" src=\"assets/img/logo.png\">\r\n</nav>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: '<router-outlet></router-outlet>'\n})\nexport class AppComponent {\n  title = 'goldbank-financing';\n}\n","import { NgModule, LOCALE_ID } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n// Pages\nimport { HomeComponent } from './pages/home/home.component';\n\n// Components\nimport { HeaderComponent } from './shared/header/header.component';\nimport { CalculatorComponent } from './shared/calculator/calculator.component';\n\n// Mask and Pipe\nimport { NgxMaskModule } from 'ngx-mask'\nimport localePt from '@angular/common/locales/pt';\nimport { registerLocaleData } from  '@angular/common';\n\nregisterLocaleData(localePt);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    CalculatorComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxMaskModule.forRoot()\n  ],\n  providers: [{\n    provide: LOCALE_ID,\n    useValue: 'pt-BR'\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './pages/home/home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}